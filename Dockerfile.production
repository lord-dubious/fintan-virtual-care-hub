# Fintan Virtual Care Hub - Production Dockerfile
# https://docs.docker.com/build/building/multi-stage/

# --- Base Stage ---
# Installs pnpm.
FROM node:18-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable


# --- Builder Stage ---
# Builds the entire application (frontend and backend).
FROM base AS builder
WORKDIR /app

# Copy dependency definition files
COPY package.json pnpm-lock.yaml ./
COPY backend/package.json ./backend/
COPY prisma ./prisma/

# Install all dependencies (including devDependencies for building)
RUN pnpm install --frozen-lockfile

# Copy all source code
COPY . .

# Generate Prisma client
RUN pnpm --filter fintan-virtual-care-backend db:generate

# Build frontend and backend
RUN pnpm build


# --- Production Stage ---
# Creates the final, lean production image.
FROM base AS production
WORKDIR /app

# Install system dependencies required for runtime
RUN apk add --no-cache \
    dumb-init \
    curl \
    postgresql-client

# Create a non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S fintan -u 1001

# Copy production dependencies definition
COPY --from=builder /app/package.json /app/pnpm-lock.yaml ./
COPY --from=builder /app/backend/package.json ./backend/

# Install only production dependencies
RUN pnpm install --prod --frozen-lockfile

# Copy built artifacts and necessary files from the builder stage
COPY --from=builder --chown=fintan:nodejs /app/dist ./dist
COPY --from=builder --chown=fintan:nodejs /app/backend/dist ./backend/dist
COPY --from=builder --chown=fintan:nodejs /app/backend/node_modules ./backend/node_modules
COPY --from=builder --chown=fintan:nodejs /app/prisma ./prisma
COPY --from=builder --chown=fintan:nodejs /app/public ./public

# Copy configuration and entrypoint
COPY --chown=fintan:nodejs .env.production ./.env
COPY --chown=fintan:nodejs docker-entrypoint.sh ./
RUN chmod +x docker-entrypoint.sh

# Create and set permissions for necessary directories
RUN mkdir -p /var/log/fintan /var/uploads/fintan && \
    chown -R fintan:nodejs /app /var/log/fintan /var/uploads/fintan

# Switch to the non-root user
USER fintan

# Expose application ports
EXPOSE 3000 10000

# Health check for the backend service
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Use dumb-init to properly handle signals
ENTRYPOINT ["dumb-init", "--"]

# Command to start the application
CMD ["./docker-entrypoint.sh"]
